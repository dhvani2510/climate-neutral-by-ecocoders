const createGradient = (ctx) => {
    if (!ctx) return null;
    const gradient = ctx.createLinearGradient(0, 0, 600, 0);
    gradient.addColorStop(0, "#07354d");
    gradient.addColorStop(1, "#95cdeb");
    return gradient;
  };
  
  const setupCanvas = (canvasId) => {
    const canvas = document.getElementById(canvasId);
    canvas.height = vehicles.length*100;  // in px
    return canvas ? canvas.getContext("2d") : null;
  };
  
  const vehicles = [];
  const emmisionCoefficient = localStorage.getItem("emissionCoefficient") || "30";
  
  window.onload = () => {
    vehicles.push(...getFleetData());
    vehicles.forEach((element) => calculateEmissions(element));
    const ctx = setupCanvas("myChart");
    const ctx2 = setupCanvas("myChart2");
    calculateCharts(ctx, ctx2);
    localStorage.setItem("fleetData", JSON.stringify(vehicles));
  };
  
  function calculateCharts(ctx, ctx2) {
    if (!ctx || !ctx2 || !vehicles.length) return;
  
    const labels = vehicles.map((v) => `${v.description} - ${v.type} - ${v.year} - ${v.make} - ${v.model}`);
    const data = vehicles.map((v) => v.totalCurrentEmissions);
  
    const chartOptions = {
      indexAxis: "y",
      responsive: true,
      maintainAspectRatio: false,
    };
  
    const generateChartData = (data) => ({
      labels,
      datasets: [{
        label: data.label,
        data: data.values,
        fill: true,
        backgroundColor: Array(labels.length).fill(data.backgroundColor),
        borderColor: Array(labels.length).fill(data.borderColor),
        borderWidth: 1,
      }],
    });
  
    const drawChart = (ctx, chartData) => new Chart(ctx, { type: "bar", data: chartData, options: chartOptions });
  
    const currentEmissionIntensityData = vehicles.map((v) => (typeof v.currentEmissionIntensity === 'number' && !isNaN(v.currentEmissionIntensity)) ? v.currentEmissionIntensity : 0);
  
    drawChart(ctx, generateChartData({ label: "Current Emissions", values: data, backgroundColor: "rgba(255, 99, 132, 0.2)", borderColor: "rgb(255, 99, 132)" }));
    drawChart(ctx2, generateChartData({ label: "Total Emission Intensity", values: currentEmissionIntensityData, backgroundColor: "rgba(255, 99, 132, 0.2)", borderColor: "rgb(255, 99, 132)" }));
  }
  
  function calculateEmissions(fleet) {
    const currentFuelEfficiency = fleet["annualFuel"] / fleet["annualVKT"];
    const currentAnnualEmission = fleet["annualFuel"] * emmisionCoefficient;
    const currentEmissionIntensity = currentAnnualEmission / fleet["annualVKT"];
    const totalCurrentEmissions = currentAnnualEmission * fleet["quantity"];
    
    fleet["currentFuelEfficiency"] = currentFuelEfficiency;
    fleet["currentEmissionIntensity"] = currentEmissionIntensity;
    fleet["totalCurrentEmissions"] = totalCurrentEmissions;
    fleet["currentAnnualEmissions"] = currentAnnualEmission / 44.01;
  }
  
  function goToGreenOptionsPage() {
    window.location.href = "green-options.html";
  }
  
  function goToUserInputPage() {
    window.location.href = "main.html";
  }
  